using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class InvulnerabilitySpecial : SpecialAbility
{
    private Health health;

    private void Awake()
    {
        health = GetComponent<Health>();
    }

    protected override void Start()
    {
        base.Start();

        if(gameObject.CompareTag("Player"))
        {
            SetupCanvasForPlayer();
        }
    }

    protected override void Update()
    {
        base.Update();

        if(CanUseSpecial() && gameObject.tag == "Player")
        {
            icons.IsSpecialReady(true);
            if (Input.GetButtonDown("Fire3"))
            {
                UseInvulnerabilitySpecial();
            }
        }
        else if (gameObject.CompareTag("Player"))
        {
            icons.IsSpecialReady(false);
        }

        if (!isSpecialInUse)
        {
            health._isInvulnerable = isSpecialInUse;
        }
    }

    public void UseInvulnerabilitySpecial()
    {
        specialCooldownTimer = 0.0f;
        isSpecialInUse = true;
        health._isInvulnerable = isSpecialInUse;
    }

    public void UseSpecial()
    {
        Debug.Log("AI using UseInvulnerabilitySpecial");
        UseInvulnerabilitySpecial();
    }
}
